#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)
if(verbose) cat( "Selecting month... \n")
dset <- dset[month, 1, 1800:1, ]
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
e <- read_edgar(path)
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)[month, 1, 1800:1, ]
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
e <- read_edgar(path)
dim(e)
stars::st_as_stars(e)
plot(stars::st_as_stars(e))
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)[month, 1, , ]
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
e <- read_edgar(path)
plot(stars::st_as_stars(e))
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)t([month, 1, 1800:1, ])
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)t([month, 1, 1800:1, ])
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path)
#' }
read_edgar <- function(path,
dataset,
show.attribute = FALSE,
month = 1,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)[month, 1, 1800:1, ]
dset <- t(dset)
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
month= 1
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
rm(month)
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path, month =1, )
#' }
read_edgar <- function(path,
month,
dataset,
show.attribute = FALSE,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)[month, 1, 1800:1, ]
dset <- t(dset)
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
e <- read_edgar(path, month =1, )
e <- read_edgar(path, month =1, dataset = "PM2.5")
plot(stars::st_as_stars(e))
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path, month =1, dataset = "PM2.5")
#' }
read_edgar <- function(path,
month,
dataset,
show.attribute = FALSE,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)[month, 1, 1800:1, ]
if(verbose) cat("Original dimensions: ", dim(dset), '\n')
dset <- dset[month, 1, 1800:1, ]
dset <- t(dset)
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
e <- read_edgar(path, month =1, dataset = "PM2.5")
#' @param verbose Logical; Do you want more information?
#' @return array of EDGAR emissions by month.
#' @importFrom  h5 h5file list.datasets list.attributes openAttribute readAttribute
#' @importFrom utils menu object.size
#' @export
#' @examples \dontrun{
#' # do not run
#' path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
#' e <- read_edgar(path, month =1, dataset = "PM2.5")
#' }
read_edgar <- function(path,
month,
dataset,
show.attribute = FALSE,
verbose = TRUE){
file <- h5::h5file(name = path, mode = 'r')
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
ds <- h5::list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
h5::list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
dataset <- ds[choice]
}
if(verbose) cat( "Reading... \n")
name_ds <- h5::openDataSet(.Object = file, datasetname = dataset)
dset <- h5::readDataSet(.Object = name_ds)
if(verbose) cat("Original dimensions: ", dim(dset), '\n')
dset <- dset[month, 1, 1800:1, ]
dset <- t(dset)
if(verbose) cat("dimensions: ", dim(dset), '\n')
if(show.attribute){
latr <- h5::list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
return(dset)
h5::h5close(file)
}
e <- read_edgar(path, month =1, dataset = "PM2.5")
dim(t(matrix(NA, ncol = 1800, nrow = 3600, byrow = TRUE)))
e <- read_edgar(path, dataset = "PM2.5")
library(sf)
?st_sf
?st_polygon
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pts = list(outer, hole1, hole2)
(pl1 = st_polygon(pts))
plot(pl1)
pl1
g <- st_sf(id = 1:length(pl1), geometry = pl1, crs = 4326)
pl1
g <- st_sf(id = 1:length(pl1), geometry = st_sfc(pl1), crs = 4326)
(pl1 = st_sfc(st_polygon(pts)))
nrow(pl1)
length(pl1)
df <- data.frame(id = 1:length(pl1))
g <- st_sf(df, geometry = pl1, crs = 4326)
g
w = matrix(c(-180,-90,
180,-90,
180,90,
-180,90,
-180,-90),
ncol=1,
byrow=TRUE)
w
pts = list(w)
(pl1 = st_sfc(st_polygon(pts)))
w = matrix(c(-180,-90,
180,-90,
180,90,
-180,90,
-180,-90),
ncol=1,
byrow=TRUE)
pts = list(w)
(pl1 = st_sfc(st_polygon(pts)))
pts
w = matrix(c(-180,-90,
180,-90,
180,90,
-180,90,
-180,-90),
ncol=2,
byrow=TRUE)
pts = list(w)
(pl1 = st_sfc(st_polygon(pts)))
length(pl1)
df <- data.frame(id = 1:length(pl1))
g <- st_sf(df, geometry = pl1, crs = 4326)
plot(g)
plot(g, axes = T)
g
system.time(g <- st_make_grid(x = g, cellsize = 0.1))
system.time(
g <- st_make_grid(x = g, cellsize = 0.1)
)
devtools::load_all(".")
library(ppchem)
devtools::load_all(".")
m <- matrix(c(NA, 2, 2, 2), ncol = 2)
n <- m
n + m
na.omit(n + m)
m[is.na(m)] <- 0
m
devtools::load_all(".")
library(ppchem)
devtools::load_all(".")
devtools::load_all(".")
library(ppchem)
devtools::load_all(".")
library(ppchem)
