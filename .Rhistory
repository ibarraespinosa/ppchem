a <- (file)
a
a[1,]
capture.output(file)
aa <- capture.output(file)
aa <- aa[2:length(aa)]
aa
grep(pattern = "D",aa)
aa[grep(pattern = "D",aa)]
if(verbose) cat(Attributes, aa[grep(pattern = "A ",aa)])
aa[grep(pattern = "A ",aa)]
if(verbose) cat("Datasets", aa[grep(pattern = "D ",aa)])
if(verbose) cat("Attributes", aa[grep(pattern = "A ",aa)])
if(verbose) cat("Datasets\n", aa[grep(pattern = "D ",aa)], "\n")
if(verbose) cat("Attributes\n", aa[grep(pattern = "A ",aa)], "\n")
read_edgar <- function(path, mode ="r", verbose = TRUE) {
file <- h5::h5file(name = path,
mode = mode)
aa <- capture.output(file)
aa <- aa[2:length(aa)]
if(verbose) print(file)
if(verbose) cat("Datasets\n", aa[grep(pattern = "D ",aa)], "\n")
if(verbose) cat("Attributes\n", aa[grep(pattern = "A ",aa)], "\n")
}
list.datasets(file, recursive = TRUE)
if(verbose) cat("Attributes\n", aa[grep(pattern = "A ",aa)], "\n")
if(verbose) cat("Datasets\n", aa[grep(pattern = "D ",aa)], "\n")
if(verbose) cat("Datasets\n", list.datasets(file, recursive = TRUE), "\n")
if(verbose) cat("Attributes\n", list.attributes(file, recursive = TRUE), "\n")
if(verbose) cat("Attributes\n", list.attributes(file), "\n")
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
list.datasets(file, recursive = TRUE), "\n")
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
ds <- gsub(pattern = "/", replacement = "", ds)
ds <- list.datasets(file, recursive = TRUE)
ds <- gsub(pattern = "/", replacement = "", ds)
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
#' input traffic data is usually for morning rush hours.
#'
#' @param x numeric vector for passenger cars
#' @return numeric vector of total volume of traffic per link, or data-frames
#' of expanded traffic
#' @import h5
#' @export
#' @examples \dontrun{
#' # do not run
#' }
library(h5)
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
mode ="r"
verbose = TRUE
read_edgar <- function(path,
mode ="r",
verbose = TRUE,
dataset,
attribute) {
file <- h5::h5file(name = path,
mode = mode)
aa <- capture.output(file)
aa <- aa[2:length(aa)]
ds <- list.datasets(file, recursive = TRUE)
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
nds <- ds[choice]
a <- file[nds]
} else {
a <- file[dataset]
}
}
readAttribute(file)
file
readAttribute(.Object = file)
openAttribute(file, "NAME")
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
a <- openAttribute(file, "NAME")
a
readAttribute(a)
(a <- openAttribute(file, "SIZE X"))
readAttribute(a)
(a <- openAttribute(file, "SIZE Y"))
readAttribute(a)
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
(a <- openAttribute(file, "SIZE Z"))
readAttribute(a)
openDataSet
nds
a <- file["PM2.5"]
class(a)
dim(a)
library(h5)
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
e <- read_edgar(path)
file <- h5::h5file(name = path,
mode = mode)
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
mode ="r"
verbose = TRUE
e <- read_edgar(path)
file <- h5::h5file(name = path,
mode = mode)
#'
#' (a <- openAttribute(file, "SIZE Y"))
#' readAttribute(a)
#'
#' (a <- openAttribute(file, "SIZE Z"))
#' readAttribute(a)
#'
#' a <- h5::openDataSet(.Object = file, datasetname = "PM2.5")
#' class(a)
#' dim(a)
a <- file["PM2.5"][1, 1, , ]
dim(a)
m <- raster::raster(matrix(NA,
nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
m[] <- e[1, 1, , ]
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
a <- st_as_stars(.x = m,
xlim = c(-180, 180),
ylim = c(-90, 90))
st_crs(a) <- 4326
plot(a, axes = T)
a <- st_as_stars(.x = t(e[1, 1, 1800:1, ]), nc = 3600, ny = 1800)
st_crs(a) <- 4326
crs = 4326)
# nx = 3600,
# ny = 1800,
# xlim = c(-180, 180),
# ylim = c(-90, 90)
)
#' }
read_edgar <- function(path,
dataset,
rastars = 'stars',
show.attribute = FALSE,
month = 1,
mode ="r",
verbose = TRUE){
file <- h5::h5file(name = path,
mode = mode)
if(missing(month)){
choice <- utils::menu(1:12, title="Choose month")
month <- (1:12)[choice]
}
modes <- c("r", "r+")
if(!mode %in% modes) stop("Only 'r' and 'r+ supported'")
ds <- list.datasets(file, recursive = TRUE)
ds <- substr(x = ds, start = 2, nchar(ds))
if(verbose) print(file)
if(verbose) cat("Datasets:\n",
ds, "\n")
if(verbose) cat("Attributes:\n",
list.attributes(file), "\n")
if(missing(dataset)){
choice <- utils::menu(ds, title="Choose dataset")
nds <- ds[choice]
}
a <- file[nds][month, 1800:1, , ]
if(verbose) cat("dimensions: ", dim(a), '\n')
if(show.attribute){
latr <- list.attributes(file)
choice <- utils::menu(latr, title="Choose attribute")
nds <- latr[choice]
at <- h5::openAttribute(.Object = file, attributename = nds)
bt <- h5::readAttribute(at)
if(verbose) cat("Attribute Name: ", at@name,  "\nValue: ",bt, "\n")
}
if(!stars){
return(a)
} else {
a <- stars::st_as_stars(a)
}
}
a <- file["PM2.5"][1, 1, , ]
a <- file["PM2.5"][1, , , ]
dim(a)
m <- raster::raster(NA,
nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
m <- raster::raster(matrix(NA, nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
m[] <- e[1, 1, , ]
m[] <- a[1, 1, , ]
m[] <- a[1, 1, , ]
m[] <- a[1, 1, , ]
m[] <- as.numeric(a[1, 1, , ])
m[] <- as.numeric(a[1, 1, , ])
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
m <- raster::raster(matrix(NA, nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
n <- m
n[] <- as.vector(a[1, 1, , ])
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
sp::spplot(n, scales = list(draw = T))
m[] <- as.vector(a[1, 1, , ])
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
m <- raster::raster(matrix(NA, nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
n <- m
n[] <- as.vector(t(a[1, 1, , ]))
m[] <- as.vector(t(a[1, 1, , ]))
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
sp::spplot(n, scales = list(draw = T))
sp::spplot(m, scales = list(draw = T))
aa <- st_as_stars(m)
aa <- stars::st_as_stars(m)
plot(aa)
a <- st_as_stars(.x = t(a[1, 1, , ]),
xlim = c(-180, 180),
ylim = c(-90, 90))
a <- stars::st_as_stars(.x = t(a[1, 1, , ]),
xlim = c(-180, 180),
ylim = c(-90, 90))
a <- stars::st_as_stars(.x = t(a[1, 1, , ]))
plot(a)
dim(a)
#'
#' (a <- openAttribute(file, "SIZE Y"))
#' readAttribute(a)
#'
#' (a <- openAttribute(file, "SIZE Z"))
#' readAttribute(a)
#'
#' a <- h5::openDataSet(.Object = file, datasetname = "PM2.5")
#' class(a)
#' dim(a)
a <- file["PM2.5"][1, , , ]
dim(a)
m <- raster::raster(matrix(NA, nrow = 3600, ncol = 1800),
xmn = -180, xmx = 180, ymn = -90, ymx = 90,
crs = sp::CRS("+init=epsg:4326"))
n <- m
n[] <- as.vector(t(a[1, 1, , ]))
m[] <- as.vector(t(a[1, 1, , ]))
m <- raster::flip(m, direction = "y")
sp::spplot(m, scales = list(draw = T))
sp::spplot(n, scales = list(draw = T))
aa <- stars::st_as_stars(m)
plot(aa)
a <- stars::st_as_stars(.x = t(a[1, 1, 1800:1, ]))
a <- file["PM2.5"][1, , , ]
dim(a)
aa <- stars::st_as_stars(.x = t(a[1, 1, , ]),
xlim = c(-180, 180),
ylim = c(-90, 90))
aa <- stars::st_as_stars(.x = t(a[1, 1, 1800:1, ]))
plot(aa)
aa
mm <- t(a[1, 1, 1800:1, ])
dim(mm)
image(mm)
aaa <- stars::st_as_stars(aa, xlim = c(-180, 180))
aaa <- stars::st_as_stars(aa, xlim = c(-180, 180), ylim = c(-90,90))
st_crs(a) <- 4326
sf::st_crs(a) <- 4326
library(stars)
st_crs(a) <- 4326
st_crs(aaa) <- 4326
plot(aaa, axes = T)
sp::spplot(m, scales = list(draw = T))
aaa <- stars::st_as_stars(aa, xlim = c(-180, 180), ylim = c(-90,90))
plot(aaa, axes = T)
library(vein)
data(net)
names(net)
netsf <- sf::st_as_sf(net)
netg <- emis_grid(spobj = netsf[,"hdv"), g = g, sr= 31983)
netg <- emis_grid(spobj = netsf[,"hdv"], g = g, sr= 31983)
g <- make_grid(netsf)
netsf
g <- make_grid(netsf,  width = 1/102)
netg <- emis_grid(spobj = netsf[,"hdv"], g = g, sr= 31983)
plot(netg["ldv"], axes = TRUE)
netg
plot(netg["hdv"], axes = TRUE)
ls()
dim(a)
plot(a)
class(m)
class(a)
class(aa)
dim(A)
dim(a)
bu_a <-a
# setwd('Documentos/inventarios/qatar')
library(vein)
library(sf)
net <- readRDS("~/Documentos/qatar/network/net.rds")
qst <- sf::st_read("~/Documentos/qatar/network/Qst.shp")
pol <- "PM"
names(pol) <- pol
for(i in 1:length(pol)){
x <- emis_merge(pol = pol[i], what = ".rds", streets = F,
path = "~/Documentos/qatar/emi", under = "none",
as_list = T)
net[pol[i]] <- units::set_units(sum(sapply(x, rowSums, na.rm = T),
na.rm = T), g)
}
PM <- emis_dist(gy = net$PM, spobj = qst, osm = rep(1, 5))
names)PM
names(PM)
saveRDS(PM, "post/streets/PM.rds")
# grid from h5
load("R/sysdata.rda")
ls()
gim(d)
dim(g)
g <- sysdata$g
ls
ls()
load("~/Documentos/ppchem/R/sysdata.rda")
ls()
object.size(a)
object.size(l)
format(object.size(l), units = "Mb")
head(l)
class(l)
gPM <- emis_grid(spobj = PM["emission"], g = l$g)
l$g$id <- 1:nrow(g)
gPM <- emis_grid(spobj = PM["emission"], g = l$g)
dim(gPM)
names(gPM)
a <- array(NA, dim = c(1,1, 3600, 1800))
m <- matrix(gPM$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
format(object.size(a), units = "Mb")
format(object.size(m), units = "Mb")
data(net)
length(net)
st_as_stars(a[1,1, , ])
plot(st_as_stars(a[1,1, , ]))
m <- matrix(net$emission, ncol = 1800, nrow = 3600, byrow = T)
a[1,1, , ] <- m
plot(st_as_stars(a[1,1, , ]))
a <- array(0, dim = c(1,1, 3600, 1800))
m <- matrix(net$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
a <- array(0, dim = c(1,1, 3600, 1800))
m <- matrix(gPM$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
plot(st_as_stars(a[1,1, , ]))
plot(st_as_stars(m))
plot(st_as_stars(m))
summary(m)
ls()
plot(gPM[gPM$emission>0 ,], axes = T)
# grid from h5
load("R/sysdata.rda")
l$g$id <- 1:nrow(g)
g <- l$g
l$g$id <- 1:nrow(g)
g <- l$g
class(g)
head(g)
library(sf)
head(g)
# setwd('Documentos/inventarios/qatar')
library(vein)
library(sf)
net <- readRDS("~/Documentos/qatar/network/net.rds")
qst <- sf::st_read("~/Documentos/qatar/network/Qst.shp")
pol <- "PM"
names(pol) <- pol
for(i in 1:length(pol)){
x <- emis_merge(pol = pol[i], what = ".rds", streets = F,
path = "~/Documentos/qatar/emi", under = "none",
as_list = T)
net[pol[i]] <- units::set_units(sum(sapply(x, rowSums, na.rm = T),
na.rm = T), g)
}
PM <- emis_dist(gy = net$PM, spobj = qst, osm = rep(1, 5))
saveRDS(PM, "post/streets/PM.rds")
gPM <- emis_grid(spobj = PM["emission"], g = g)
dim(gPM)
head(gPM)
plot(gPM[gPM$emission>0 ,], axes = T)
a <- array(NA, dim = c(1,1, 3600, 1800))
m <- matrix(gPM$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
image(a[1,1, , ])
library(stars)
plot(stars::st_as_stars(a[1,1, , ]))
a <- stars::st_as_stars(a)
plot(a)
a <- stars::st_as_stars(m)
plot(a)
head(a)
a
max(a$A1)
mi(a$A1)
summary(a$A1)
min(a$A1)
plot(gPM[gPM$emission>0 ,"emission"], axes = T)
image(m[!is.na(m)])
image(m[!is.na(m), ])
image(na.omit(m))
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
e <- read_edgar(path)
library(ppchem)
e <- read_edgar(path)
dim(e)
dim(a)
dim(m)
a <- array(0, dim = c(1,1, 3600, 1800))
m <- matrix(net$emission, ncol = 1800, nrow = 3600)
m <- matrix(gPM$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
library(h5)
writeDataSet(.Object = h5,data = a)
writeDataSet(.Object = file(),data = a)
writeDataSet(.Object = file,data = a)
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
file <- h5::h5file(name = path
)
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5"
path  = "~/Downloads/EDGAR-HTAP_TRANSPORT_2010.h5")
file <- h5::h5file(name = path)
path
file <- h5file(name = path)
(name = path)library(h5)
library(h5)
file <- h5file(name = path)
file <- h5file(name = path)
file <- h5file(name = path)
writeDataSet(.Object = file(),data = a)
writeDataSet(.Object = file, data = a)
a <- readDataSet(.Object = file, "PM2.5")
file
a <- readDataSet(.Object = file, dspace = "PM2.5")
#open
a <- openDataSet(.Object = file, datasetname = "PM2.5")
class(a)
# read
aa <- readDataSet(.Object = a)
a
class(a)
a
#open
(a <- openDataSet(.Object = file, datasetname = "PM2.5"))
class(a)
a
h5close(file)
#open
(a <- openDataSet(.Object = file, datasetname = "PM2.5"))
file <- h5file(name = path)
#open
(a <- openDataSet(.Object = file, datasetname = "PM2.5"))
class(a)
aa
# read
aa <- readDataSet(.Object = a)
aa
class(aa)
dim(aa)
ls()
head(PM)
dim(PM)
dim(g)
gPM <- emis_grid_array(spobj = PM["emission"], sr = 4326)
gPM <- emis_grid(spobj = PM["emission"], sr = 4326)
gPM <- emis_grid(spobj = PM["emission"], g = g,sr = 4326)
a <- array(0, dim = c(1,1, 3600, 1800))
m <- matrix(netg$emission, ncol = 1800, nrow = 3600)
m <- matrix(gPM$emission, ncol = 1800, nrow = 3600)
a[1,1, , ] <- m
h5close(file)
file <- h5file(name = path)
#open
(ds <- openDataSet(.Object = file, datasetname = "PM2.5"))
class(ds)
# read
dsta_ds <- readDataSet(.Object = ds)
dim(dsta_ds)
dsta_ds[1,1, , ] <- m
#write
writeDataSet(.Object = ds, data = dsta_ds)
h5close(file)
ls()
rm(a)
rm(aa)
rm(dsta_ds)
rm(ds)
rm(file)
rm(g)
rm(gPM)
rm(l)
dataset
